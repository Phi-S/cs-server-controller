name: build docker images

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: get version
      uses: reecetech/version-increment@2023.9.3
      id: version
      with:
        scheme: semver
        increment: patch
    - name: set up docker buildx
      uses: docker/setup-buildx-action@v1
    - name: build cs-controller-instance
      uses: docker/build-push-action@v2
      id: cs-controller-instance
      env:
        TAG: ${{ secrets.DOCKER_REGISTRY }}/cs-controller-instance:${{ steps.version.outputs.version }}
      with:
        context: .
        file: ./Dockerfile_instance
        tags: ${{ env.INSTANCE_TAG }}
    - name: build cs-controller-web
      uses: docker/build-push-action@v2
      id: cs-controller-web
      env:
        TAG: ${{ secrets.DOCKER_REGISTRY }}/cs-controller-web:${{ steps.version.outputs.version }}
      with:
        context: .
        file: ./Dockerfile_web
        tags: ${{ env.WEB_TAG }}
    - name: docker login
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    - name: push cs-controller-instance images
      run: docker image push ${{ steps.cs-controller-instance.env.TAG }}
    - name: push cs-controller-web images
      run: docker image push ${{ cs-controller-web.env.TAG }}
    - name: push git tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git tag $steps.version.outputs.version
        git push origin $steps.version.outputs.version
        
