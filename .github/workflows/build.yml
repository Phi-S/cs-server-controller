name: build docker images

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: get version
      uses: reecetech/version-increment@2023.9.3
      id: version
      with:
        scheme: semver
        increment: patch
    - name: set up docker buildx
      uses: docker/setup-buildx-action@v1
    - name: create cs-controller-instance tag
      id : cs-controller-instance
      run: echo "tag=${{ secrets.DOCKER_REGISTRY }}/cs-controller-instance:${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
    - name: build cs-controller-instance
      run: docker build -t ${{ steps.cs-controller-instance.outputs.tag }} -f Dockerfile_instance .
    - name: create cs-controller-web tag
      id : cs-controller-web
      run: echo "tag=${{ secrets.DOCKER_REGISTRY }}/cs-controller-web:${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
    - name: build cs-controller-web
      run: docker build -t ${{ steps.cs-controller-web.outputs.tag }} -f Dockerfile_web .
    - name: docker login
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    - name: push cs-controller-instance image
      run: docker image push ${{ steps.cs-controller-instance.outputs.tag }}
    - name: push cs-controller-web image
      run: docker image push ${{ steps.cs-controller-web.outputs.tag }}
    - name: push git tag
      uses: actions-ecosystem/action-push-tag@v1
      with:
        tag: ${{ steps.version.outputs.version }}
        message: ${{ steps.version.outputs.version }}

