// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Database.Migrations
{
    [DbContext(typeof(InstanceDbContext))]
    [Migration("20240116112537_AddedSystemLogTable")]
    partial class AddedSystemLogTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Infrastructure.Database.Models.ChatCommandDbModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatMessage")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChatCommands");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.EventLogDbModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("DataJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TriggeredUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EvenLogs");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.ServerLogDbModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ServerStartDbModelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServerStartDbModelId");

                    b.ToTable("ServerLogs");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.ServerStartDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartParameters")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServerStarts");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.SystemLogDbModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.UpdateOrInstallLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UpdateOrInstallStartDbModelId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UpdateOrInstallStartDbModelId");

                    b.ToTable("UpdateOrInstallLogs");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.UpdateOrInstallStartDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UpdateOrInstallStarts");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.ServerLogDbModel", b =>
                {
                    b.HasOne("Infrastructure.Database.Models.ServerStartDbModel", "ServerStartDbModel")
                        .WithMany()
                        .HasForeignKey("ServerStartDbModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServerStartDbModel");
                });

            modelBuilder.Entity("Infrastructure.Database.Models.UpdateOrInstallLogModel", b =>
                {
                    b.HasOne("Infrastructure.Database.Models.UpdateOrInstallStartDbModel", "UpdateOrInstallStartDbModel")
                        .WithMany()
                        .HasForeignKey("UpdateOrInstallStartDbModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UpdateOrInstallStartDbModel");
                });
#pragma warning restore 612, 618
        }
    }
}
